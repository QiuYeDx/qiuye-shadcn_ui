{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-button",
  "title": "AnimatedButton",
  "type": "registry:component",
  "author": "QiuYeDx <me@qiuyedx.com>",
  "dependencies": [
    "motion",
    "class-variance-authority",
    "clsx"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "path": "components/qiuye-ui/animated-button.tsx",
      "target": "src/components/qiuye-ui/animated-button.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { motion, type HTMLMotionProps } from \"motion/react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst animatedButtonVariants = cva(\n  \"relative inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        sm: \"h-9 px-3\",\n        md: \"h-10 px-4 py-2\",\n        lg: \"h-11 px-8\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"md\",\n    },\n  }\n);\n\nconst animationVariants = {\n  bounce: {\n    hover: { scale: 1.05, transition: { duration: 0.2 } },\n    tap: { scale: 0.95 },\n  },\n  pulse: {\n    hover: {\n      scale: [1, 1.05, 1],\n      transition: { duration: 0.6, repeat: Infinity },\n    },\n    tap: { scale: 0.95 },\n  },\n  wiggle: {\n    hover: {\n      rotate: [0, 5, -5, 0],\n      transition: { duration: 0.5, repeat: Infinity },\n    },\n    tap: { scale: 0.95 },\n  },\n  spin: {\n    hover: {\n      rotate: 360,\n      transition: { duration: 0.8, repeat: Infinity, ease: \"linear\" as const },\n    },\n    tap: { scale: 0.95 },\n  },\n};\n\nexport interface AnimatedButtonProps\n  extends Omit<HTMLMotionProps<\"button\">, \"whileHover\" | \"whileTap\">,\n    VariantProps<typeof animatedButtonVariants> {\n  animation?: \"bounce\" | \"pulse\" | \"wiggle\" | \"spin\";\n}\n\nconst AnimatedButton = React.forwardRef<HTMLButtonElement, AnimatedButtonProps>(\n  (\n    { className, variant, size, animation = \"bounce\", children, ...props },\n    ref\n  ) => {\n    const selectedAnimation = animationVariants[animation];\n\n    return (\n      <motion.button\n        className={cn(animatedButtonVariants({ variant, size, className }))}\n        ref={ref}\n        whileHover={selectedAnimation.hover}\n        whileTap={selectedAnimation.tap}\n        {...props}\n      >\n        {children}\n      </motion.button>\n    );\n  }\n);\n\nAnimatedButton.displayName = \"AnimatedButton\";\n\nexport { AnimatedButton, animatedButtonVariants };\n"
    }
  ]
}
